webpackJsonpjwplayer([8], { 55(t, n, e) {
  let r,
    o; r = [e(1)], o = function (t) {
    function n(t, n) { return function () { t.apply(n, arguments); }; } function e(t) { if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new'); if (typeof t !== 'function') throw new TypeError('not a function'); this._state = null, this._value = null, this._deferreds = [], f(t, n(o, this), n(i, this)); } function r(t) { const n = this; return this._state === null ? void this._deferreds.push(t) : void l(() => { const e = n._state ? t.onFulfilled : t.onRejected; if (e === null) return void (n._state ? t.resolve : t.reject)(n._value); let r; try { r = e(n._value); } catch (o) { return void t.reject(o); }t.resolve(r); }); } function o(t) { try { if (t === this) throw new TypeError('A promise cannot be resolved with itself.'); if (t && (typeof t === 'object' || typeof t === 'function')) { const e = t.then; if (typeof e === 'function') return void f(n(e, t), n(o, this), n(i, this)); } this._state = !0, this._value = t, c.call(this); } catch (r) { i.call(this, r); } } function i(t) { this._state = !1, this._value = t, c.call(this); } function c() { for (let t = 0, n = this._deferreds.length; t < n; t++)r.call(this, this._deferreds[t]); this._deferreds = null; } function u(t, n, e, r) { this.onFulfilled = typeof t === 'function' ? t : null, this.onRejected = typeof n === 'function' ? n : null, this.resolve = e, this.reject = r; } function f(t, n, e) { let r = !1; try { t((t) => { r || (r = !0, n(t)); }, (t) => { r || (r = !0, e(t)); }); } catch (o) { if (r) return; r = !0, e(o); } } var l = t.defer,
      s = Array.isArray || function (t) { return Object.prototype.toString.call(t) === '[object Array]'; }; e.prototype.catch = function (t) { return this.then(null, t); }, e.prototype.then = function (t, n) { const o = this; return new e(((e, i) => { r.call(o, new u(t, n, e, i)); })); }, e.all = function () { const t = Array.prototype.slice.call(arguments.length === 1 && s(arguments[0]) ? arguments[0] : arguments); return new e(((n, e) => { function r(i, c) { try { if (c && (typeof c === 'object' || typeof c === 'function')) { const u = c.then; if (typeof u === 'function') return void u.call(c, (t) => { r(i, t); }, e); }t[i] = c, --o === 0 && n(t); } catch (f) { e(f); } } if (t.length === 0) return n([]); for (var o = t.length, i = 0; i < t.length; i++)r(i, t[i]); })); }, e.resolve = function (t) { return t && typeof t === 'object' && t.constructor === e ? t : new e(((n) => { n(t); })); }, e.reject = function (t) { return new e(((n, e) => { e(t); })); }, e.race = function (t) { return new e(((n, e) => { for (let r = 0, o = t.length; r < o; r++)t[r].then(n, e); })); }, e._setImmediateFn = function (t) { l = t; }, window.Promise || (window.Promise = e);
  }.apply(n, r), !(void 0 !== o && (t.exports = o));
} });
