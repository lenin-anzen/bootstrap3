/*!
 AnythingSlider v1.9.6 minified using Google Closure Compiler
 Original by Chris Coyier: http://css-tricks.com
 Get the latest version: https://github.com/CSS-Tricks/AnythingSlider
*/
(function (d, l, n) {
  d.anythingSlider = function (m, p) {
    let a = this,
      b,
      k; a.el = m; a.$el = d(m).addClass('anythingBase').wrap('<div class="anythingSlider"><div class="anythingWindow" /></div>'); a.$el.data('AnythingSlider', a); a.init = function () {
      a.options = b = d.extend({}, d.anythingSlider.defaults, p); a.initialized = !1; d.isFunction(b.onBeforeInitialize) && a.$el.bind('before_initialize', b.onBeforeInitialize); a.$el.trigger('before_initialize', a); d('\x3c!--[if lte IE 8]><script>jQuery("body").addClass("as-oldie");\x3c/script><![endif]--\x3e').appendTo('body').remove();
      a.$wrapper = a.$el.parent().closest('div.anythingSlider').addClass(`anythingSlider-${b.theme}`); a.$outer = a.$wrapper.parent(); a.$window = a.$el.closest('div.anythingWindow'); a.$win = d(l); a.$controls = d('<div class="anythingControls"></div>'); a.$nav = d('<ul class="thumbNav"><li><a><span></span></a></li></ul>'); a.$startStop = d('<a href="#" class="start-stop"></a>'); (b.buildStartStop || b.buildNavigation) && a.$controls.appendTo(b.appendControlsTo && d(b.appendControlsTo).length ? d(b.appendControlsTo) : a.$wrapper); b.buildNavigation &&
a.$nav.appendTo(b.appendNavigationTo && d(b.appendNavigationTo).length ? d(b.appendNavigationTo) : a.$controls); b.buildStartStop && a.$startStop.appendTo(b.appendStartStopTo && d(b.appendStartStopTo).length ? d(b.appendStartStopTo) : a.$controls); a.runTimes = d('.anythingBase').length; a.regex = b.hashTags ? new RegExp(`panel${a.runTimes}-(\\d+)`, 'i') : null; a.runTimes === 1 && a.makeActive(); a.flag = !1; b.autoPlayLocked && (b.autoPlay = !0); a.playing = b.autoPlay; a.slideshow = !1; a.hovered = !1; a.panelSize = []; a.currentPage = a.targetPage =
b.startPanel = parseInt(b.startPanel, 10) || 1; b.changeBy = parseInt(b.changeBy, 10) || 1; k = (b.mode || 'h').toLowerCase().match(/(h|v|f)/); k = b.vertical ? 'v' : (k || ['h'])[0]; b.mode = k === 'v' ? 'vertical' : k === 'f' ? 'fade' : 'horizontal'; k === 'f' && (b.showMultiple = 1, b.infiniteSlides = !1); a.adj = b.infiniteSlides ? 0 : 1; a.adjustMultiple = 0; b.playRtl && a.$wrapper.addClass('rtl'); b.buildStartStop && a.buildAutoPlay(); b.buildArrows && a.buildNextBackButtons(); a.$lastPage = a.$targetPage = a.$currentPage; if (b.expand) {
        if (!0 === b.aspectRatio) {
          b.aspectRatio =
a.$el.width() / a.$el.height();
        } else if (typeof b.aspectRatio === 'string' && b.aspectRatio.indexOf(':') !== -1) { const c = b.aspectRatio.split(':'); b.aspectRatio = c[0] / c[1]; }b.aspectRatio > 0 && b.showMultiple > 1 && (b.aspectRatio *= b.showMultiple);
      }a.updateSlider(); b.expand && (a.$window.css({ width: '100%', height: '100%' }), a.checkResize()); d.isFunction(d.easing[b.easing]) || (b.easing = 'swing'); b.pauseOnHover && a.$wrapper.hover(() => { a.playing && (a.$el.trigger('slideshow_paused', a), a.clearTimer(!0)); }, () => {
        a.playing && (a.$el.trigger('slideshow_unpaused',
          a), a.startStop(a.playing, !0));
      }); a.slideControls(!1); a.$wrapper.bind('mouseenter mouseleave', function (b) { d(this)[b.type === 'mouseenter' ? 'addClass' : 'removeClass']('anythingSlider-hovered'); a.hovered = b.type === 'mouseenter' ? !0 : !1; a.slideControls(a.hovered); }); d(n).keyup((c) => { if (b.enableKeyboard && a.$wrapper.hasClass('activeSlider') && !c.target.tagName.match('TEXTAREA|INPUT|SELECT') && (b.mode === 'vertical' || c.which !== 38 && c.which !== 40)) switch (c.which) { case 39:case 40:a.goForward(); break; case 37:case 38:a.goBack(); } });
      a.currentPage = (b.hashTags ? a.gotoHash() : '') || b.startPanel || 1; a.gotoPage(a.currentPage, !1, null, -1); const f = 'slideshow_resized slideshow_paused slideshow_unpaused slide_init slide_begin slideshow_stop slideshow_start initialized swf_completed'.split(' '); d.each('onSliderResize onShowPause onShowUnpause onSlideInit onSlideBegin onShowStop onShowStart onInitialized onSWFComplete'.split(' '), (c, h) => { d.isFunction(b[h]) && a.$el.bind(f[c], b[h]); }); d.isFunction(b.onSlideComplete) && a.$el.bind('slide_complete',
        () => { setTimeout(() => { b.onSlideComplete(a); }, 0); return !1; }); a.initialized = !0; a.$el.trigger('initialized', a); a.startStop(b.autoPlay);
    }; a.updateSlider = function () {
      a.$el.children('.cloned').remove(); a.navTextVisible = a.$nav.find('span:first').css('visibility') !== 'hidden'; a.$nav.empty(); a.currentPage = a.currentPage || 1; a.$items = a.$el.children(); a.pages = a.$items.length; a.dir = b.mode === 'vertical' ? 'top' : 'left'; b.showMultiple = parseInt(b.showMultiple, 10) || 1; b.navigationSize = !1 === b.navigationSize ? 0 : parseInt(b.navigationSize,
        10) || 0; a.$items.find('a').unbind('focus.AnythingSlider').bind('focus.AnythingSlider', function (c) {
        var f = d(this).closest('.panel'),
          f = a.$items.index(f) + a.adj; a.$items.find('.focusedLink').removeClass('focusedLink'); d(this).addClass('focusedLink'); a.$window.scrollLeft(0).scrollTop(0); f !== -1 && (f >= a.currentPage + b.showMultiple || f < a.currentPage) && (a.gotoPage(f), c.preventDefault());
      }); b.showMultiple > 1 && (b.showMultiple > a.pages && (b.showMultiple = a.pages), a.adjustMultiple = b.infiniteSlides && a.pages > 1 ? 0 : b.showMultiple -
1); a.$controls.add(a.$nav).add(a.$startStop).add(a.$forward).add(a.$back)[a.pages <= 1 ? 'hide' : 'show'](); a.pages > 1 && a.buildNavigation(); b.mode !== 'fade' && b.infiniteSlides && a.pages > 1 && (a.$el.prepend(a.$items.filter(':last').clone().addClass('cloned')), b.showMultiple > 1 ? a.$el.append(a.$items.filter(`:lt(${b.showMultiple})`).clone().addClass('cloned multiple')) : a.$el.append(a.$items.filter(':first').clone().addClass('cloned')), a.$el.find('.cloned').each(function () {
        d(this).find('a,input,textarea,select,button,area,form').attr({ disabled: 'disabled',
          name: '' }); d(this).find('[id]')[d.fn.addBack ? 'addBack' : 'andSelf']().removeAttr('id');
      })); a.$items = a.$el.addClass(b.mode).children().addClass('panel'); a.setDimensions(); b.resizeContents ? (a.$items.css('width', a.width), a.$wrapper.css('width', a.getDim(a.currentPage)[0]).add(a.$items).css('height', a.height)) : a.$win.load(() => { a.setDimensions(); k = a.getDim(a.currentPage); a.$wrapper.css({ width: k[0], height: k[1] }); a.setCurrentPage(a.currentPage, !1); }); a.currentPage > a.pages && (a.currentPage = a.pages); a.setCurrentPage(a.currentPage,
        !1); a.$nav.find('a').eq(a.currentPage - 1).addClass('cur'); b.mode === 'fade' && (k = a.$items.eq(a.currentPage - 1), b.resumeOnVisible ? k.css({ opacity: 1, visibility: 'visible' }).siblings().css({ opacity: 0, visibility: 'hidden' }) : (a.$items.css('opacity', 1), k.fadeIn(0).siblings().fadeOut(0)));
    }; a.buildNavigation = function () {
      if (b.buildNavigation && a.pages > 1) {
        let c,
          f,
          e,
          h,
          g; a.$items.filter(':not(.cloned)').each(function (q) {
          g = d('<li/>'); e = q + 1; f = (e === 1 ? ' first' : '') + (e === a.pages ? ' last' : ''); c = `<a class="panel${e}${a.navTextVisible ?
            '"' : ` ${b.tooltipClass}" title="@"`} href="#"><span>@</span></a>`; d.isFunction(b.navigationFormatter) ? (h = b.navigationFormatter(e, d(this)), typeof h === 'string' ? g.html(c.replace(/@/g, h)) : g = d('<li/>', h)) : g.html(c.replace(/@/g, e)); g.appendTo(a.$nav).addClass(f).data('index', e);
        }); a.$nav.children('li').bind(b.clickControls, function (c) { !a.flag && b.enableNavigation && (a.flag = !0, setTimeout(() => { a.flag = !1; }, 100), a.gotoPage(d(this).data('index'))); c.preventDefault(); }); b.navigationSize && b.navigationSize <
a.pages && (a.$controls.find('.anythingNavWindow').length || a.$nav.before(`<ul><li class="prev"><a href="#"><span>${b.backText}</span></a></li></ul>`).after(`<ul><li class="next"><a href="#"><span>${b.forwardText}</span></a></li></ul>`).wrap('<div class="anythingNavWindow"></div>'), a.navWidths = a.$nav.find('li').map(function () { return d(this).outerWidth(!0) + Math.ceil(parseInt(d(this).find('span').css('left'), 10) / 2 || 0); }).get(), a.navLeft = 1, a.$nav.width(a.navWidth(1, a.pages + 1) + 25), a.$controls.find('.anythingNavWindow').width(a.navWidth(1,
          b.navigationSize + 1)).end().find('.prev,.next').bind(b.clickControls, function (c) { a.flag || (a.flag = !0, setTimeout(() => { a.flag = !1; }, 200), a.navWindow(a.navLeft + b.navigationSize * (d(this).is('.prev') ? -1 : 1))); c.preventDefault(); }));
      }
    }; a.navWidth = function (b, f) {
      let e,
        d = Math.max(b, f),
        g = 0; for (e = Math.min(b, f); e < d; e++)g += a.navWidths[e - 1] || 0; return g;
    }; a.navWindow = function (c) {
      if (b.navigationSize && b.navigationSize < a.pages && a.navWidths) {
        const f = a.pages - b.navigationSize + 1; c = c <= 1 ? 1 : c > 1 && c < f ? c : f; c !== a.navLeft && (a.$controls.find('.anythingNavWindow').animate({ scrollLeft: a.navWidth(1,
          c),
        width: a.navWidth(c, c + b.navigationSize) }, { queue: !1, duration: b.animationTime }), a.navLeft = c);
      }
    }; a.buildNextBackButtons = function () {
      a.$forward = d(`<span class="arrow forward"><a href="#"><span>${b.forwardText}</span></a></span>`); a.$back = d(`<span class="arrow back"><a href="#"><span>${b.backText}</span></a></span>`); a.$back.bind(b.clickBackArrow, (c) => { b.enableArrows && !a.flag && (a.flag = !0, setTimeout(() => { a.flag = !1; }, 100), a.goBack()); c.preventDefault(); }); a.$forward.bind(b.clickForwardArrow,
        (c) => { b.enableArrows && !a.flag && (a.flag = !0, setTimeout(() => { a.flag = !1; }, 100), a.goForward()); c.preventDefault(); }); a.$back.add(a.$forward).find('a').bind('focusin focusout', function () { d(this).toggleClass('hover'); }); a.$back.appendTo(b.appendBackTo && d(b.appendBackTo).length ? d(b.appendBackTo) : a.$wrapper); a.$forward.appendTo(b.appendForwardTo && d(b.appendForwardTo).length ? d(b.appendForwardTo) : a.$wrapper); a.arrowWidth = a.$forward.width(); a.arrowRight = parseInt(a.$forward.css('right'), 10); a.arrowLeft =
parseInt(a.$back.css('left'), 10);
    }; a.buildAutoPlay = function () { a.$startStop.html(`<span>${a.playing ? b.stopText : b.startText}</span>`).bind(b.clickSlideshow, (c) => { b.enableStartStop && (a.startStop(!a.playing), a.makeActive(), a.playing && !b.autoPlayDelayed && a.goForward(!0, b.playRtl)); c.preventDefault(); }).bind('focusin focusout', function () { d(this).toggleClass('hover'); }); }; a.checkResize = function (b) {
      const f = !!(n.hidden || n.webkitHidden || n.mozHidden || n.msHidden); clearTimeout(a.resizeTimer); a.resizeTimer =
setTimeout(() => {
  let e = a.$outer.width(),
    d = a.$outer[0].tagName === 'BODY' ? a.$win.height() : a.$outer.height(); f || a.lastDim[0] === e && a.lastDim[1] === d || (a.setDimensions(), a.$el.trigger('slideshow_resized', a), a.gotoPage(a.currentPage, a.playing, null, -1)); typeof b === 'undefined' && a.checkResize();
}, f ? 2E3 : 500);
    }; a.setDimensions = function () {
      a.$wrapper.find('.anythingWindow, .anythingBase, .panel')[d.fn.addBack ? 'addBack' : 'andSelf']().css({ width: '', height: '' }); a.width = a.$el.width(); a.height = a.$el.height(); a.outerPad =
[a.$wrapper.innerWidth() - a.$wrapper.width(), a.$wrapper.innerHeight() - a.$wrapper.height()]; let c,
        f,
        e,
        h,
        g = 0,
        m = { width: '100%', height: '100%' },
        k = b.showMultiple > 1 && b.mode === 'horizontal' ? a.width || a.$window.width() / b.showMultiple : a.$window.width(),
        n = b.showMultiple > 1 && b.mode === 'vertical' ? a.height / b.showMultiple || a.$window.height() / b.showMultiple : a.$window.height(); if (b.expand) {
        a.lastDim = [a.$outer.width(), a.$outer.height()]; c = a.lastDim[0] - a.outerPad[0]; f = a.lastDim[1] - a.outerPad[1]; if (b.aspectRatio && b.aspectRatio <
a.width) { let l = f * b.aspectRatio; l < c ? c = l : (l = c / b.aspectRatio, l < f && (f = l)); }a.$wrapper.add(a.$window).css({ width: c, height: f }); a.height = f = b.showMultiple > 1 && b.mode === 'vertical' ? n : f; a.width = k = b.showMultiple > 1 && b.mode === 'horizontal' ? c / b.showMultiple : c; a.$items.css({ width: k, height: n });
      }a.$items.each(function (l) {
        h = d(this); e = h.children(); b.resizeContents ? (c = a.width, f = a.height, h.css({ width: c, height: f }), e.length && (e[0].tagName === 'EMBED' && e.attr(m), e[0].tagName === 'OBJECT' && e.find('embed').attr(m), e.length === 1 && e.css(m))) :
          (b.mode === 'vertical' ? (c = h.css('display', 'inline-block').width(), h.css('display', '')) : c = h.width() || a.width, e.length === 1 && c >= k && (c = e.width() >= k ? k : e.width(), e.css('max-width', c)), h.css({ width: c, height: '' }), f = e.length === 1 ? e.outerHeight(!0) : h.height(), f <= a.outerPad[1] && (f = a.height), h.css('height', f)); a.panelSize[l] = [c, f, g]; g += b.mode === 'vertical' ? f : c;
      }); a.$el.css(b.mode === 'vertical' ? 'height' : 'width', b.mode === 'fade' ? a.width : g);
    }; a.getDim = function (c) {
      let f,
        e,
        d = a.width,
        g = a.height; if (a.pages < 1 || isNaN(c)) {
        return [d,
          g];
      } c = b.infiniteSlides && a.pages > 1 ? c : c - 1; if (e = a.panelSize[c])d = e[0] || d, g = e[1] || g; if (b.showMultiple > 1) for (e = 1; e < b.showMultiple; e++)f = c + e, b.mode === 'vertical' ? (d = Math.max(d, a.panelSize[f][0]), g += a.panelSize[f][1]) : (d += a.panelSize[f][0], g = Math.max(g, a.panelSize[f][1])); return [d, g];
    }; a.goForward = function (c, d) { a.gotoPage(a[b.allowRapidChange ? 'targetPage' : 'currentPage'] + b.changeBy * (d ? -1 : 1), c); }; a.goBack = function (c) { a.gotoPage(a[b.allowRapidChange ? 'targetPage' : 'currentPage'] - b.changeBy, c); }; a.gotoPage = function (c,
      f, e, h) {
      !0 !== f && (f = !1, a.startStop(!1), a.makeActive()); /^[#|.]/.test(c) && d(c).length && (c = d(c).closest('.panel').index() + a.adj); if (b.changeBy !== 1) { const g = a.pages - a.adjustMultiple; c < 1 && (c = b.stopAtEnd ? 1 : b.infiniteSlides ? a.pages + c : b.showMultiple > 1 - c ? 1 : g); c > a.pages ? c = b.stopAtEnd ? a.pages : b.showMultiple > 1 - c ? 1 : c -= g : c >= g && (c = g); }a.pages <= 1 || (a.$lastPage = a.$currentPage, typeof c !== 'number' && (c = parseInt(c, 10) || b.startPanel, a.setCurrentPage(c)), f && b.isVideoPlaying(a) || (b.stopAtEnd && !b.infiniteSlides && c > a.pages - b.showMultiple &&
(c = a.pages - b.showMultiple + 1), a.exactPage = c, c > a.pages + 1 - a.adj && (c = b.infiniteSlides || b.stopAtEnd ? a.pages : 1), c < a.adj && (c = b.infiniteSlides || b.stopAtEnd ? 1 : a.pages), b.infiniteSlides || (a.exactPage = c), a.currentPage = c > a.pages ? a.pages : c < 1 ? 1 : a.currentPage, a.$currentPage = a.$items.eq(a.currentPage - a.adj), a.targetPage = c === 0 ? a.pages : c > a.pages ? 1 : c, a.$targetPage = a.$items.eq(a.targetPage - a.adj), h = typeof h !== 'undefined' ? h : b.animationTime, h >= 0 && a.$el.trigger('slide_init', a), h > 0 && !0 === b.toggleControls && a.slideControls(!0),
        b.buildNavigation && a.setNavigation(a.targetPage), !0 !== f && (f = !1), (!f || b.stopAtEnd && c === a.pages) && a.startStop(!1), h >= 0 && a.$el.trigger('slide_begin', a), setTimeout((d) => {
          let f,
            g = !0; b.allowRapidChange && a.$wrapper.add(a.$el).add(a.$items).stop(!0, !0); b.resizeContents || (f = a.getDim(c), d = {}, a.$wrapper.width() !== f[0] && (d.width = f[0] || a.width, g = !1), a.$wrapper.height() !== f[1] && (d.height = f[1] || a.height, g = !1), g || a.$wrapper.filter(':not(:animated)').animate(d, { queue: !1, duration: h < 0 ? 0 : h, easing: b.easing })); b.mode ===
'fade' ? a.$lastPage[0] !== a.$targetPage[0] ? (a.fadeIt(a.$lastPage, 0, h), a.fadeIt(a.$targetPage, 1, h, () => { a.endAnimation(c, e, h); })) : a.endAnimation(c, e, h) : (d = {}, d[a.dir] = -a.panelSize[b.infiniteSlides && a.pages > 1 ? c : c - 1][2], b.mode !== 'vertical' || b.resizeContents || (d.width = f[0]), a.$el.filter(':not(:animated)').animate(d, { queue: !1, duration: h < 0 ? 0 : h, easing: b.easing, complete() { a.endAnimation(c, e, h); } }));
        }, parseInt(b.delayBeforeAnimate, 10) || 0)));
    }; a.endAnimation = function (c, d, e) {
      c === 0 ? (a.$el.css(a.dir, b.mode ===
'fade' ? 0 : -a.panelSize[a.pages][2]), c = a.pages) : c > a.pages && (a.$el.css(a.dir, b.mode === 'fade' ? 0 : -a.panelSize[1][2]), c = 1); a.exactPage = c; a.setCurrentPage(c, !1); b.mode === 'fade' && a.fadeIt(a.$items.not(`:eq(${c - a.adj})`), 0, 0); a.hovered || a.slideControls(!1); b.hashTags && a.setHash(c); e >= 0 && a.$el.trigger('slide_complete', a); typeof d === 'function' && d(a); b.autoPlayLocked && !a.playing && setTimeout(() => { a.startStop(!0); }, b.resumeDelay - (b.autoPlayDelayed ? b.delay : 0));
    }; a.fadeIt = function (a, f, e, h) {
      const g = a.filter(':not(:animated)');
      a = e < 0 ? 0 : e; if (b.resumeOnVisible)f === 1 && g.css('visibility', 'visible'), g.fadeTo(a, f, () => { f === 0 && g.css('visibility', 'hidden'); d.isFunction(h) && h(); }); else g[f === 0 ? 'fadeOut' : 'fadeIn'](a, h);
    }; a.setCurrentPage = function (c, d) {
      c = parseInt(c, 10); if (!(a.pages < 1 || c === 0 || isNaN(c))) {
        c > a.pages + 1 - a.adj && (c = a.pages - a.adj); c < a.adj && (c = 1); b.buildArrows && !b.infiniteSlides && b.stopAtEnd && (a.$forward[c === a.pages - a.adjustMultiple ? 'addClass' : 'removeClass']('disabled'), a.$back[c === 1 ? 'addClass' : 'removeClass']('disabled'),
          c === a.pages && a.playing && a.startStop()); if (!d) { const e = a.getDim(c); a.$wrapper.css({ width: e[0], height: e[1] }).add(a.$window).scrollLeft(0).scrollTop(0); a.$el.css(a.dir, b.mode === 'fade' ? 0 : -a.panelSize[b.infiniteSlides && a.pages > 1 ? c : c - 1][2]); }a.currentPage = c; a.$currentPage = a.$items.removeClass('activePage').eq(c - a.adj).addClass('activePage'); b.buildNavigation && a.setNavigation(c);
      }
    }; a.setNavigation = function (b) { a.$nav.find('.cur').removeClass('cur').end().find('a').eq(b - 1).addClass('cur'); }; a.makeActive = function () {
      a.$wrapper.hasClass('activeSlider') ||
(d('.activeSlider').removeClass('activeSlider'), a.$wrapper.addClass('activeSlider'));
    }; a.gotoHash = function () {
      let c = l.location.hash,
        f = c.indexOf('&'),
        e = c.match(a.regex); e !== null || /^#&/.test(c) || /#!?\//.test(c) || /\=/.test(c) ? e !== null && (e = b.hashTags ? parseInt(e[1], 10) : null) : (c = c.substring(0, f >= 0 ? f : c.length), e = d(c).length && d(c).closest('.anythingBase')[0] === a.el ? a.$items.index(d(c).closest('.panel')) + a.adj : null); return e;
    }; a.setHash = function (b) {
      let d = `panel${a.runTimes}-`,
        e = l.location.hash; typeof e !==
'undefined' && (l.location.hash = e.indexOf(d) > 0 ? e.replace(a.regex, d + b) : `${e}&${d}${b}`);
    }; a.slideControls = function (c) {
      let d = c ? 'slideDown' : 'slideUp',
        e = c ? 0 : b.animationTime,
        h = c ? b.animationTime : 0,
        g = c ? 1 : 0; c = c ? 0 : 1; b.toggleControls && a.$controls.stop(!0, !0).delay(e)[d](b.animationTime / 2).delay(h); b.buildArrows && b.toggleArrows && (!a.hovered && a.playing && (c = 1, g = 0), a.$forward.stop(!0, !0).delay(e).animate({ right: a.arrowRight + c * a.arrowWidth, opacity: g }, b.animationTime / 2), a.$back.stop(!0, !0).delay(e).animate({ left: a.arrowLeft +
c * a.arrowWidth,
      opacity: g }, b.animationTime / 2));
    }; a.clearTimer = function (b) { a.timer && (l.clearInterval(a.timer), !b && a.slideshow && (a.$el.trigger('slideshow_stop', a), a.slideshow = !1)); }; a.startStop = function (c, d) {
      !0 !== c && (c = !1); (a.playing = c) && !d && (a.$el.trigger('slideshow_start', a), a.slideshow = !0); b.buildStartStop && (a.$startStop.toggleClass('playing', c).find('span').html(c ? b.stopText : b.startText), a.$startStop.find('span').css('visibility') === 'hidden' && a.$startStop.addClass(b.tooltipClass).attr('title', c ? b.stopText :
        b.startText)); c ? (a.clearTimer(!0), a.timer = l.setInterval(() => { n.hidden || n.webkitHidden || n.mozHidden || n.msHidden ? b.autoPlayLocked || a.startStop() : b.isVideoPlaying(a) ? b.resumeOnVideoEnd || a.startStop() : a.goForward(!0, b.playRtl); }, b.delay)) : a.clearTimer();
    }; a.init();
  }; d.anythingSlider.defaults = { theme: 'default',
    mode: 'horiz',
    expand: !1,
    resizeContents: !0,
    showMultiple: !1,
    easing: 'swing',
    buildArrows: !0,
    buildNavigation: !0,
    buildStartStop: !0,
    toggleArrows: !1,
    toggleControls: !1,
    startText: 'Start',
    stopText: 'Stop',
    forwardText: '&raquo;',
    backText: '&laquo;',
    tooltipClass: 'tooltip',
    enableArrows: !0,
    enableNavigation: !0,
    enableStartStop: !0,
    enableKeyboard: !0,
    startPanel: 1,
    changeBy: 1,
    hashTags: !0,
    infiniteSlides: !0,
    navigationFormatter: null,
    navigationSize: !1,
    autoPlay: !1,
    autoPlayLocked: !1,
    autoPlayDelayed: !1,
    pauseOnHover: !0,
    stopAtEnd: !1,
    playRtl: !1,
    delay: 3E3,
    resumeDelay: 15E3,
    animationTime: 600,
    delayBeforeAnimate: 0,
    clickForwardArrow: 'click',
    clickBackArrow: 'click',
    clickControls: 'click focusin',
    clickSlideshow: 'click',
    allowRapidChange: !1,
    resumeOnVideoEnd: !0,
    resumeOnVisible: !0,
    isVideoPlaying(d) { return !1; } }; d.fn.anythingSlider = function (m, l) {
    return this.each(function () {
      let a,
        b = d(this).data('AnythingSlider'); (typeof m).match('object|undefined') ? b ? b.updateSlider() : new d.anythingSlider(this, m) : /\d/.test(m) && !isNaN(m) && b ? (a = typeof m === 'number' ? m : parseInt(d.trim(m), 10), a >= 1 && a <= b.pages && b.gotoPage(a, !1, l)) : /^[#|.]/.test(m) && d(m).length && b.gotoPage(m, !1, l);
    });
  };
}(jQuery, window, document));
